{"version":3,"sources":["ApiContext.js","config.js","Results/Results.js","ValidationError.js","Searchbar/City.js","Searchbar/TempScale.js","Searchbar/Searchbar.js","HomePage/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","unit","query","current_temp","max_temp","min_temp","description","humidity","wind_speed","process","REACT_APP_WEATHER_KEY","Results","weather","this","context","className","Math","round","feels_like","Component","contextType","ApiContext","ValidationError","props","message","City","htmlFor","id","type","name","placeholder","onChange","handleQuery","required","validateCity","TempScale","onClick","handleUnitClick","value","validateTempScale","Searchbar","state","e","setState","target","console","log","handleSubmit","preventDefault","url","config","fetch","then","ok","Error","json","weatherJson","main","temp","temp_max","temp_min","catch","error","validCity","trim","length","city","Provider","onSubmit","to","HomePage","App","exact","path","component","renderMainRoutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7659932c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default React.createContext({\n  unit: \"\",\n  query: \"\",\n  current_temp: \"\",\n  max_temp: \"\",\n  min_temp: \"\",\n  description: \"\",\n  humidity: \"\",\n  wind_speed: \"\",\n});\n","export default {\n  API_ENDPOINT:\n    \"https://api.openweathermap.org/data/2.5/weather?APPID=\",\n  API_KEY: process.env.REACT_APP_WEATHER_KEY,\n  KEY: '0ddf041fb53a2aff9b34fe18f7ed9ebd'\n};\n","import React, { Component } from \"react\";\nimport ApiContext from \"../ApiContext\";\nimport \"../App.css\";\n\nclass Results extends Component {\n  static contextType = ApiContext;\n  render() {\n    const weather = this.context;\n\n    return (\n      <div className=\"App_results\">\n        <div className={weather.current_temp ? \"results\" : \"results hidden\"}>\n          <p>Current Temp</p>\n          <h1>{Math.round(weather.current_temp)}&deg;</h1>\n          <p>{weather.description}</p>\n          Feels Like: {Math.round(weather.feels_like)}&deg;, Humidity:{\" \"}\n          {Math.round(weather.humidity)}&#37;\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ValidationError(props) {\n    if(props.message) {\n        return <div className=\"error\">{props.message}</div>\n    }\n    return <></>\n}\n\nValidationError.propTypes = {\n    message: PropTypes.string\n}","import React, { Component } from \"react\";\nimport ApiContext from \"../ApiContext\";\nimport ValidationError from \"../ValidationError\";\n\nclass City extends Component {\n  static contextType = ApiContext;\n\n  render() {\n      const weather = this.context;\n    return (\n      <>\n        <label htmlFor=\"searchbar_box\" id=\"searchbar_label\">Enter a City:</label>{\"  \"}\n        <input\n          type=\"text\"\n          name=\"searchbar_box\"\n          id=\"searchbar_box\"\n          placeholder=\"Los Angeles\"\n          onChange={weather.handleQuery}\n          required\n        />\n        <ValidationError message={weather.validateCity} />\n      </>\n    );\n  }\n}\n\nexport default City;\n","import React, { Component } from \"react\";\nimport ApiContext from \"../ApiContext\";\nimport ValidationError from \"../ValidationError\";\n\nclass TempScale extends Component {\n  static contextType = ApiContext;\n  render() {\n    const weather = this.context;\n    return (\n      <>\n        <div className=\"searchbar_label\">Temperature Scale</div>\n        <div className=\"container\" onClick={weather.handleUnitClick}>\n          <div className=\"item\">\n            <button\n              type=\"button\"\n              className={\n                weather.unit === \"metric\"\n                  ? \"unitButton activeUnit\"\n                  : \"unitButton\"\n              }\n              value=\"metric\"\n            >\n              &deg;C\n            </button>\n          </div>\n          <div className=\"item\">\n            <button\n              type=\"button\"\n              className={\n                weather.unit === \"imperial\"\n                  ? \"unitButton activeUnit\"\n                  : \"unitButton\"\n              }\n              value=\"imperial\"\n            >\n              &deg;F\n            </button>\n          </div>\n          <div className=\"item\">\n            <button\n              type=\"button\"\n              className={\n                weather.unit === \"standard\"\n                  ? \"unitButton activeUnit\"\n                  : \"unitButton\"\n              }\n              value=\"standard\"\n            >\n              &deg;K\n            </button>\n          </div>\n        </div>\n        <ValidationError message={weather.validateTempScale} />\n      </>\n    );\n  }\n}\n\nexport default TempScale;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ApiContext from \"../ApiContext\";\nimport config from \"../config\";\nimport Results from \"../Results/Results\";\nimport City from \"./City\";\nimport TempScale from \"./TempScale\";\n\nclass Searchbar extends Component {\n  state = {\n    unit: \"\",\n    query: \"\",\n  };\n\n  handleUnitClick = (e) => {\n    this.setState({\n      unit: e.target.value,\n    });\n    console.log(e.target.value);\n  };\n\n  handleQuery = (e) => {\n    this.setState({\n      query: e.target.value,\n    });\n    console.log(e.target.value);\n  };\n\n  validateCity() {\n    const validCity = this.state.query.trim();\n    if(validCity.length === 0){\n      return \"City is required\"\n    } else if (validCity.length > 100) {\n      return \"Now you're just being silly\"\n    }\n  }\n\n  validateTempScale() {\n    const validTemp = this.state.unit.trim();\n    if(validTemp.length === 0){\n      return \"Please select a temperature scale\"\n    } \n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const query = this.state.query;\n    const unit = this.state.unit;\n    const url = `${config.API_ENDPOINT}${config.KEY}&units=${unit}&q=${query}`;\n    console.log(query, unit);\n\n    fetch(url)\n      .then((weather) => {\n        console.log(url);\n        if (!weather.ok) {\n          throw new Error(\"The weather isn't weather. Please try again later.\");\n        }\n        //console.log(\"Response:\", weather);\n        return weather.json();\n      })\n      .then((weatherJson) => {\n        this.setState({\n          current_temp: weatherJson.main.temp,\n          max_temp: weatherJson.main.temp_max,\n          min_temp: weatherJson.main.temp_min,\n          description: weatherJson.weather[0].description,\n          feels_like: weatherJson.main.feels_like,\n          humidity: weatherJson.main.humidity,\n        });\n        console.log(\"JSON:\", weatherJson);\n        console.log(\"State: \", this.state);\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  };\n\n  render() {\n    const value = {\n      city: this.state.query,\n      current_temp: this.state.current_temp,\n      max_temp: this.state.max_temp,\n      min_temp: this.state.min_temp,\n      description: this.state.description,\n      feels_like: this.state.feels_like,\n      humidity: this.state.humidity,\n      unit: this.state.unit,\n      handleQuery: this.handleQuery,\n      handleUnitClick: this.handleUnitClick,\n      validateCity: this.validateCity(),\n      validateTempScale: this.validateTempScale(),\n    };\n    return (\n      <ApiContext.Provider value={value}>\n        <form className=\"App_search\" onSubmit={this.handleSubmit}>\n          <div className=\"searchbar_main\">\n            <City />\n            <br />\n            <TempScale />\n            <Link to=\"/weathertop\">\n              <button id=\"inputbutton\" type=\"button\" value=\"Back\">\n                Back\n              </button>\n            </Link>{\" \"}\n            <input id=\"inputbutton\" type=\"submit\" value=\"Submit\" />\n          </div>\n          <Results />\n        </form>\n      </ApiContext.Provider>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div className=\"App_home\">\n        <h4>\n          <Link to=\"/weather-search\"><button id=\"findmyweather\">Find My Weather</button></Link>\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport { Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport HomePage from \"./HomePage/HomePage\";\nimport Results from \"./Results/Results\";\n\nclass App extends Component {\n  renderMainRoutes() {\n    return (\n      <>\n        <Route exact path=\"/weathertop\" component={HomePage} />\n        <Route path=\"/weather-search\" component={Searchbar} />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App_main\">\n        <header className=\"App_header\">\n          <h1>\n            <Link to=\"/weathertop\" className=\"title link\">\n              Weathertop\n            </Link>\n          </h1>\n        </header>\n        <main className=\"App_main\">{this.renderMainRoutes()}</main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}